{"task_id": "HumanEval/0", "prompt":"\"\"\"let's say i have a list of marks scored in each question by person. \nI want a sum of all the extra marks he/she scored in exam, extra score is whatever he scored above 100 in each question.\nbut if marks is below 0 in any question it would reduce the total extra scores.\nTake input from user for marks scored in form of list and print the total extra marks scored by him/her.\nExample:\nInput: Enter the marks: 100 120 -30 140 -50 -60 170 22 55 -20\nOutput: Total Extra marks scored: -30\nInput: Enter the marks: 10 112 -32 22\nOutput: Total Extra marks scored: -20\n\n#START\"\"\"","test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([100, 120, -30, 140, -50, -60, 170, 22,55,-20,-90]) == -120\n    assert candidate([111, 20, -130, 140, -50, -60, 170, 22,55,-20,-190]) == -329\n    assert candidate([170, 22,55,-20,-90]) == -40\n    assert candidate([100.1, 120, -30, 140, -50, -60, 170, 22,55,-20,-90]) == -119.9\n","entry_point": "#START"}
{"task_id": "HumanEval/1", "prompt":"\"\"\"i have one big bag in which there are multiple small bags fill with sand. bag of each small bag is different from each other.\ni want to split the big bad into 2 medium bags, such that avergae weight of each medium bag is same.\nreturn True if it is possible to split the big bag into 2 medium bags, else return False.\nTake input from user for weight of each small bag in form of list and print True or False.\nInput: big_bag = [1,2,3,4,5,6,7,8]\nOutput: True\nInput: big_bag = [3,1]\nOutput: False\n\n#START\"\"\"", "test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([2,2,2,4,4]) == True\n    assert candidate([2,12,12,22]) == True\n    assert candidate([2,12,12,21]) == False\n","entry_point": "#START" }
{"task_id": "HumanEval/2", "prompt":"\"\"\"suppose you are standing at origin (0,0) and you are given a list of 4 distances, where each distance is a step in a direction (N,W,S,E)\nReturn True if your path crosses itself, else False\nExample:\nInput: [2,1,1,1]\nOutput: True\nInput: [1,2,3,4]\nOutput: False\n\n#START\"\"\"", "test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([1,1,2,2]) == False\n    assert candidate([3,2,1,4]) == True\n    assert candidate([3,3,3,3]) == True\n    assert candidate([2,3,1,1]) == False\n","entry_point": "#START"}
{"task_id": "HumanEval/3", "prompt":"\"\"\"let's say i have list of 3 corrdinates. Print True if the 3 points are boomarang and False if not.\nBoomarang: A boomarang is a set of 3 points that are all distinct and not in a straight line.\nInput: [[1,1],[2,3],[3,2]]\nOutput: True\nInput: [[1,1],[2,2],[3,3]]\nOutput: False\n\n#START\"\"\"", "test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([[1,2],[2,4],[4,8]]) == False\n    assert candidate([[4,7],[5,6],[3,4]]) == True=\n","entry_point": "#START"}
{"task_id": "HumanEval/4", "prompt":"\"\"\"i have list of coordinates, i want to know the maximmum area of square that can be formed from these coordinates.\nSquare is formed by 4 coordinates, with equal sides and 90 degree angle between them. Each side should be atleast 1 unit long.\nTake input in form of list of coordinates and print the maximum area of square.\nexample\nINPUT: [[1,1],[1,3],[3,1],[3,3],[2,2]]\noutput: 4\nINPUT: [[1,1],[1,3],[3,1],[4,1],[4,4]]\noutput: 4\n\n#START\"\"\"", "test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([[1,1],[1,3],[4,1],[4,5],[5,3]]) == 4\n    assert candidate([[1,1],[1,5],[3,1],[3,3],[2,2]]) == 9\n    assert candidate([[1,1], [2,2],[4,1]]) == 0\n","entry_point": "#START"}

